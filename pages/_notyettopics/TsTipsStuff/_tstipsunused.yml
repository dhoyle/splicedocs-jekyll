
    - category: Customer-Specific
      internal_only: Yes
      description: This section contains configuration information for specific Splice Machine customers.
      issues:

      - title: Anthem Settings
        internal_only: Yes
        description: Settings, recommendations, and reasons for Anthem configuration.
        conditions:
        discussion: >
          See: [https://docs.google.com/spreadsheets/d/1H757Cc79IuWQ7OZyvwDnuu4d4MSxJIlQQS7mYKbhLTM/edit?usp=sharing]
        comments:

    - category: Database Configuration
      internal_only: No
      description: This section contains information related to configuring the Splice Machine database in a cluster.
      issues:

      - title: Reduce Parser Overhead
        internal_only: No
        description: "You can reduce parser overhead for multiple `IN` lists when there are a low number of rows per combined column probe key."
        conditions: Depending on data demographics.
        discussion: "Use the `SET_GLOBAL_DATABASE_PROPERTY` system procedure; for example:\n\n`CALL SYSCS_UTIL.SYSCS_SET_GLOBAL_DATABASE_PROPERTY('derby.database.maxMulticolumnProbeValues', '2000');`\n\nThe default limit is `10000` probes."
        comments: "MultiProbeScan with multiple `IN` lists can be tuned, depending on data demographics, to limit the maximum number of probes that are generated. This avoids unnecessary parser overhead when there are a low number of rows per combined column probe key."

    - category: Debugging
      internal_only: No
      description: This section contains information about debugging database issues.
      issues:

      - title: Fix System Table Corruption
        internal_only: No
        description: Use the `DICTIONARY_DELETE` system procedure to fix corruption.
        conditions: When indexes have more or less rows than the base table.
        discussion: "Write queries to find the affected `ROWIDs`, using the `index=<index_name>` hint to specify the source, which can be an index or the base table."
        comments:

      - title: Submitting Exception Call Stacks
        internal_only: Yes
        description: Always grab the last listed Exception call stack from the logs.
        conditions: "A customer reports a system error, and there is a chain of Exception stack traces in the applicable log file, e.g.:\n\n```SQLException ... caused by StandardException... caused by IOException```\n{: .Example}"
        discussion: "Always save the last-listed call stack in the set, as it indicates the original root cause, and is essential for problem analysis.\n\nSaving the entire set of stack traces may be best.\n\nIf the call stack indicates a remote exception, the original stack trace from a different node in the cluster might not be listed, and may have to be searched for in logs on the other nodes."
        comments:


    - category: External Tables
      internal_only: No
      description: This section contains information about working with external tables.
      issues:

      - title: Ingestion of bad records
        internal_only: No
        description: Bad import record log files may be difficult to access in a fully secured Kerberos environment.
        conditions: When ingesting data from an external table in a secured Kerberos environment, and the data contains bad records.
        discussion: "Write queries to find the affected `ROWIDs`, using the `index=<index_name>` hint to specify the source, which can be an index or the base table."
        comments:
