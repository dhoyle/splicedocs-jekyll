

Download and Installation
Download the appropriate package for your operating system from http://splicemachine:URnx92JXhw@updates.compilerworks.com/private/splicemachine/

Login: splicemachine / URnx92JXhw

Linux users may choose from the redhat-like, debian-like or standalone formats, each of which has a README file on the web site. Windows and Mac OSX users should use the standalone version in .tar.gz format. The file name will always be the same, but the version of the installed software can be discovered by running any of the commands with the --version flag.

Once installed, you may wish to replace the file lib/db-client-[VERSION].jar with the appropriate JDBC client for YOUR target Splice Machine installation.

Major Components
Splice Plus - Standalone
The spliceplus-standalone command is a standalone emulator for the Oracle sql*plus command. It contains the complete PL/SQL compiler and interpreter, and requires only a Splice Machine server. It is the easiest way to get started with CompilerWorks PL/SQL. Run:

bin/spliceplus-standalone --jdbcAddress jdbc:splice://[SPLICEHOST]:1527/[SPLICEDB]
Splice Plus - JDBC
The CompilerWorks JDBC server is a PL/SQL JDBC server which accepts Oracle (rather than Splice Machine) SQL. The compiler and PL/SQL interpreter are in the JDBC server, and the clients can be thin and lightweight. There are two provided clients: jdbc-client/compilerworks-plugin-jdbc-client-[VERSION]-all.jar for use in your own JDBC applications which previously used Oracle, and bin/spliceplus - which is a variant of the spliceplus-standalone command using CompilerWorks JDBC client rather than an internal PL/SQL compiler and interpreter. To use this variant, you must first run the CompilerWorks PL/SQL JDBC server, presumably somewhere in your infrastructure, where lightweight clients can connect to it:

cw-jdbc-server  --jdbcAddress jdbc:splice://[SPLICEHOST]:1527/[SPLICEDB]
After this, you can connect to the CompilerWorks JDBC server using the CompilerWorks JDBC client at jdbc:compilerworks://[CWHOST]:9999/[SPLICEDB]?user=[SPLICEUSER]&password=[SPLICEPASS] ; The spliceplus command is provided as a convenient sql*plus emulator using this connection method.

Note that cw-jdbc-server accepts all the same Splice Machine configuration and CompilerWorks diagnostic arguments as spliceplus-standalone.

Splice Plus Analyzer
The Splice Plus Analyzer is a command line program which will inspect a set of PL/SQL scripts and produce a human- or machine-readable report on their usage of features. Run:

bin/spliceplus-analyzer [SCRIPT] ...
As with all CompilerWorks commands, the detailed arguments to spliceplus-analyzer can be inspected using --help.

Execution Notes
Logging
The installation package contains a file lib/logback.xml.removed which is honoured by the entire CompilerWorks PL/SQL system. If you rename this to logback.xml then it will reduce logging to an almost minimal level. If you write your own logback.xml file and put it in lib/ then it will be honoured.

Persistence of PL/SQL procedures
By default, CompilerWorks JDBC and Standalone will persist created procedures to the SYS.SYSSOURCECODE table. This requires a compatible Splice Machine version which includes the patch to add the SYSCS_UTIL.SYSCS_SAVE_SOURCECODE function. Additionally, PL/SQL scripts longer than 10922 characters cannot be saved - see  for details.

Where to start?
That depends on who you are.

Sales Engineer evaluating compatibility with an existing codebase
start with spliceplus-analyzer, generate a CSV report
Key for review the CSV Report in this sheet
Customer wanting to try spliceplus
question: is it server mode or standalone
standalone mode should be deprecated. It exists because:
people don't want to run one extra (server) process
dbms_output is unavailable in server mode (so far)
Analyst or user wanting to use Zeppelin
Are they using a Splice cloud installation or are they setting up their own?
General notes:

All commands support a --help flag, which is the canonical source of information about flags accepted by that command.
Reporting Issues
Run spliceplus --supportBundle bundle.zip ... and when it fails, it will write a status to bundle.zip. Send bundle.zip to support@compilerworks.com
Raise a JIRA issue at https://splicemachine.atlassian.net/projects/PLSQL/summary and attach the support bundle.
WHEN the JIRA is marked resolved then the available build will incorporate the fix.
Known Issues, Errata, Notes and Workarounds
Persistence may break because of  You can disable persistence using --debug DISABLE_PERSISTENCE on either spliceplus-standalone or cw-jdbc-server.
OVER WINDOW causes crash:
GROUP BY with WINDOW gives wrong answer:
TRUNC(timestamp) cannot accept a nonconstant value:
UDF in PARTITION clause causes crash:
DBMS_OUTPUT does not work in JDBC mode.
TABLES created in Splice Machine using types which do not have Oracle equivalents may misbehave, and work on a best-effort basis.
e.g. Splice Machine has a 32-bit primitive integer on the database side. Oracle has not. If you say INTEGER in Oracle, what it means is NUMERIC(31, 0) which is a BCD value in Splice.
sqlplus scripts allow trailing garbage at the end of the script. If the last "block" or statement in your script is not executing, add an extra / to cause it to submit. This is not a bug; this is how it is meant to be.
Errata
This spreadsheet has a list of workarounds for things "partially" compatible between PL/SQL and Splice Machine native.


 
